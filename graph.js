var i = 0;

var upper = [28.03, 27.58, 26.7, 26.78, 27.03, 27.13, 27.1, 26.43, 27.18, 28.48, 27.85, 27.23, 27.18, 27.05, 26.83, 
26.48, 26.0, 25.58, 25.38, 25.35, 25.1, 24.78, 24.75, 24.75, 24.38, 24.18, 24.13, 24.1, 24.15, 24.35, 24.2, 23.85, 
23.83, 23.73, 23.75, 23.93, 24.13, 24.05, 23.85, 23.88, 24.0, 24.0, 23.83, 23.55, 23.2, 22.75, 22.35, 22.15, 21.68, 
21.4, 22.0, 22.53, 22.48, 22.45, 22.6, 22.75, 22.68, 22.38, 22.05, 21.8, 21.78, 21.68, 21.58, 21.15, 20.4, 20.13, 19.9, 
19.6, 19.5, 19.55, 19.43, 19.33, 19.74, 19.94, 20.05, 20.53, 20.73, 20.85, 21.03, 21.05, 21.08, 20.98, 21.05, 21.05, 20.85, 
21.05, 21.05, 20.89, 20.89, 20.65, 20.43, 20.55, 21.05, 21.43, 21.4, 21.3, 21.1, 20.98, 21.13];

var lower = [18.33, 17.88, 17.0, 17.08, 17.33, 17.43, 17.4, 16.73, 17.48, 18.78, 18.15, 17.53, 17.48, 17.35, 17.13, 16.78, 
16.3, 15.88, 15.68, 15.65, 15.4, 15.08, 15.05, 15.05, 14.68, 14.48, 14.43, 14.4, 14.45, 14.65, 14.5, 14.15, 14.13, 14.03, 
14.05, 14.23, 14.43, 14.35, 14.15, 14.18, 14.3, 14.3, 14.13, 13.85, 13.5, 13.05, 12.65, 12.45, 11.98, 11.7, 12.3, 12.83, 12.78, 
12.75, 12.9, 13.05, 12.98, 12.68, 12.35, 12.1, 12.08, 11.98, 11.88, 11.45, 10.7, 10.43, 10.2, 9.9, 9.8, 9.85, 9.73, 9.63, 10.04, 
10.24, 10.35, 10.83, 11.03, 11.15, 11.33, 11.35, 11.38, 11.28, 11.35, 11.35, 11.15, 11.35, 11.35, 11.19, 11.19, 10.95, 10.73, 10.85, 
11.35, 11.73, 11.7, 11.6, 11.4, 11.28, 11.43];

var middle = [23.18, 22.73, 21.85, 21.93, 22.18, 22.28, 22.25, 21.58, 22.33, 23.63, 23.0, 22.38, 22.33, 22.2, 21.98, 21.63, 
21.15, 20.73, 20.53, 20.5, 20.25, 19.93, 19.9, 19.9, 19.53, 19.33, 19.28, 19.25, 19.3, 19.5, 19.35, 19.0, 18.98, 18.88, 
18.9, 19.08, 19.28, 19.2, 19.0, 19.03, 19.15, 19.15, 18.98, 18.7, 18.35, 17.9, 17.5, 17.3, 16.83, 16.55, 17.15, 17.68, 17.63, 
17.6, 17.75, 17.9, 17.83, 17.53, 17.2, 16.95, 16.93, 16.83, 16.73, 16.3, 15.55, 15.28, 15.05, 14.75, 14.65, 14.7, 14.58, 14.48, 
14.89, 15.09, 15.2, 15.68, 15.88, 16.0, 16.18, 16.2, 16.23, 16.13, 16.2, 16.2, 16.0, 16.2, 16.2, 16.04, 16.04, 15.8, 15.58, 15.7, 16.2, 16.58, 16.55, 16.45, 16.25, 16.13, 16.28];

var prices = [23.18, 22.73, 21.85, 21.93, 22.18, 22.28, 22.25, 21.58, 22.33, 23.63, 23.0, 22.38, 22.33, 22.2, 21.98, 21.63, 
21.15, 20.73, 20.53, 20.5, 20.25, 19.93, 19.9, 19.9, 19.53, 19.33, 19.28, 19.25, 19.3, 19.5, 19.35, 19.0, 18.98, 18.88, 
18.9, 19.08, 19.28, 19.2, 19.0, 19.03, 19.15, 19.15, 18.98, 18.7, 18.35, 17.9, 17.5, 17.3, 16.83, 16.55, 17.15, 17.68, 17.63, 
17.6, 17.75, 17.9, 17.83, 17.53, 17.2, 16.95, 16.93, 16.83, 16.73, 16.3, 15.55, 15.28, 15.05, 14.75, 14.65, 14.7, 14.58, 14.48, 
14.89, 15.09, 15.2, 15.68, 15.88, 16.0, 16.18, 16.2, 16.23, 16.13, 16.2, 16.2, 16.0, 16.2, 16.2, 16.04, 16.04, 15.8, 15.58, 15.7, 16.2, 16.58, 16.55, 16.45, 16.25, 16.13, 16.28];

var bandData = [["Day","Upper Band","Moving Average","Lower Band", "Price"]];
for(i=0;i < upper.length; i++) {
  bandData.push([i,upper[i],middle[i],lower[i], prices[i]])
}

google.charts.load('current', {
  callback: drawLineColors,
  packages: ['corechart']
});

function drawLineColors(data) {
var data = google.visualization.arrayToDataTable(data);

  var options = {
    height: 200,
    legend: {
      position: 'top'
    },
    series: {
      0: {color: "green"},
      1: {color: "grey"},
      2: {color: "red"},
      3: {color: "black"},
    },
    hAxis: {
      title: "Date"
    },
    vAxis: {
      title: "Price"
    }
  };

  /*var dataView = new google.visualization.DataView(data);
  dataView.setColumns([
    // reference existing columns by index
    0, 1, 2, 3,
    // add function for line color
    {
      calc: function(data, row) {
        var colorDown = 'red';
        var colorUp = 'green';


        if ((row === 0) && (data.getValue(row, 1) < data.getValue(row + 1, 1))) {
          return colorDown;
        } else if ((row > 0) && (data.getValue(row - 1, 1) < data.getValue(row, 1))) {
          return colorDown;
        }
        return colorUp;
      },
      type: 'string',
      role: 'style'
    }
  ]);*/


  var chart = new google.visualization.LineChart(document.getElementById('graph1'));
  chart.draw(data, options);
}

function getBreakPoints(prices) {
    start = 0
    max = 0
    points = []

    for(i = 1; i < prices.length; i++) {
        //day, upper, middle, lower
        if(prices[2] > prices[1]) {
            if(start == 0) {
                start = i;
                max = prices[2] - prices[1];
            }
            else {
                if(max < 0) {
                    point.push([start,i,max]);
                    start = i;
                    max = prices[2] - prices[1];
                }
                else {
                    max = Math.max(prices[2] - prices[1], max);
                }
            }
        }
        else {
            if(prices[2] < prices[3]) {
                if(start == 0) {
                    start = i;
                    max = prices[2] - prices[3];
                }
                else {
                    if(max > 0) {
                        points.push([start,i,max]);
                        start = i;
                        max = prices[2] - prices[3];
                    }
                    else {
                        max = Math.min(prices[2] - prices[3], max);
                    }
                }
            }
            else {
                if(start != 0) {
                    points.push([start,i,max]);
                    start = 0;
                    max = 0;
                }
            }
        }
    }
    return points;
}